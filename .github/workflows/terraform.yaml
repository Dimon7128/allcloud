name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      id: aws-creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::295257193777:role/GitHub
        aws-region: eu-west-1
        role-session-name: GitHubActionSession
        audience: sts.amazonaws.com
    - name: Verify AWS identity
      run: |
        aws sts get-caller-identity
    - name: Request OIDC Token
      run: |
        echo "Requesting OIDC token"
        curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" $ACTIONS_ID_TOKEN_REQUEST_URL


    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0'  

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -no-color
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2
      continue-on-error: true

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: |
    #     terraform apply -auto-approve
    #   working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    # - name: Terraform Format Check
    #   run: terraform fmt -check
    #   working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Upload Terraform Plan Output
      if: always() && steps.plan.outcome == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: plan.txt

# This is a basic workflow to help you get started with Actions
# name: Connect to an AWS role from a GitHub repository

# # Controls when the action will run. Invokes the workflow on push events but only for the main branch
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# env:
  
#   AWS_REGION : eu-west-1 #Change to reflect your Region

# # Permission can be added at job level or workflow level    
# permissions:
#       id-token: write   # This is required for requesting the JWT
#       contents: read    # This is required for actions/checkout
# jobs:
#   AssumeRoleAndCallIdentity:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Git clone the repository
#         uses: actions/checkout@v3
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1.7.0
#         with:
#           role-to-assume: arn:aws:iam::295257193777:role/GitHub #change to reflect your IAM roleâ€™s ARN
#           role-session-name: GitHub_to_AWS_via_FederatedOIDC
#           aws-region: ${{ env.AWS_REGION }}
#       # Hello from AWS: WhoAmI
#       - name: Sts GetCallerIdentity
#         run: |
#           aws sts get-caller-identity