name: Terraform CI/CD
on:
  push:
    branches:
      - feature
  pull_request_review:
    types: [submitted, edited, dismissed]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write

jobs:
  terraform:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it


    - name: Check last commit message
      id: commit-message
      run: echo "::set-output name=message::$(git log -1 --pretty=%B)"
      # Gets the last commit message and sets it as an output variable


    - name: Set up GitHub CLI
      run: |
        sudo apt update && sudo apt install -y gh
      # Installs GitHub CLI for further use in the workflow

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.PAT_TOKEN }}" | gh auth login --with-token


    - name: Create Pull Request
      if: contains(steps.commit-message.outputs.message, 'trigger-PR')
      run: |
        gh pr create --title "Merge feature into main" --body "Automated PR to merge changes from feature to main." --base main --head feature --repo ${{ github.repository }} --reviewer Dimon7128 --label "automated-pr"

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.9.5'

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2


    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -out=plan.tfplan
        terraform plan -no-color > plan.txt
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Upload Terraform Plan Output
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: ./terraform/dynamic_ec2/modules/dynamic_ec2/plan.tfplan

    - name: Create Pull Request
      if: contains(steps.commit-message.outputs.message, 'trigger-PR')
      run: |
        COMMIT_ID=$(git rev-parse --short HEAD)
        gh pr create --title "Merge feature into main - ${COMMIT_ID}" --body "Automated PR to merge changes from feature to main. Commit ID: ${COMMIT_ID}" --base main --head feature --repo ${{ github.repository }} --reviewer Dimon7128 --label "automated-pr"
    # Creates a pull request automatically if the last commit message contains 'trigger-PR'
    # The title of the PR includes the short commit   hash to ensure uniqueness


    - name: Comment Terraform Plan on PR
      uses: actions/github-script@v5
      env:
        PLAN: ${{ steps.plan.outputs.plan }}
      with:
        script: |
          const output = `### Terraform Plan Output\n\`\`\`\n${{ steps.plan.outputs.plan }}\n\`\`\``;
          const issue_number = context.issue.number;
          if (issue_number) {
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
          } else {
            console.log("No issue   number found. Skipping comment.");
          }

  negative_response:
    # needs: terraform
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' && (github.event.review.state == 'changes_requested' || github.event.review.state == 'commented')
    steps:
    - name: Send email to PR issuer
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com  # Replace  with your email provider's SMTP server
        server_port: 465
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: 'PR Review - Changes Requested'
        body: |
          Hello, changes have been requested for your pull request.
          Please address the comments and update the PR.
        to: 'dmitri.burkov@allcloud.io'  # Use  PR issuer's email
        from: 'burkov1910@gmail.com'

  positive_response:
    # needs: terraform
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.1.0'

    - name: Install GitHub CLI
      run: |
        sudo apt update
        sudo apt install -y gh

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Download Latest Artifact
      run: |
        LATEST_ARTIFACT_URL=$(gh run list --workflow=terraform.yaml --limit=1 | grep 'completed' | awk '{print $8}')
        gh run download $LATEST_ARTIFACT_URL --name "terraform-plan" --dir "./artifacts"

    - name: What is  inside?
      run: |
        cd artifacts
        ls -a

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2

    - name: Terraform Apply
      run: |
        terraform apply -input=false "/home/runner/work/allcloud/allcloud/artifacts/plan.tfplan"
      working-directory: ./terraform/dynamic_ec2/modules/dynamic_ec2
